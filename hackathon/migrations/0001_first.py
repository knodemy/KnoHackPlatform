# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-11-14 07:56
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_name', models.CharField(blank=True, max_length=75)),
                ('event_theme', models.CharField(blank=True, max_length=75)),
                ('event_date', models.DateField()),
                ('participant_grade_level', models.CharField(blank=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10'), (b'11', b'11'), (b'12', b'12')], max_length=30)),
                ('min_grade', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True)),
                ('max_grade', models.IntegerField(blank=True, choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)], null=True)),
                ('time_zone', models.CharField(blank=True, help_text=b'ex: PST', max_length=15)),
                ('start_time', models.DateTimeField(blank=True, help_text=b'Please use 24 hour time.', null=True)),
                ('end_time', models.DateTimeField(blank=True, help_text=b'Please use 24 hour time.', null=True)),
                ('location_name', models.CharField(blank=True, help_text=b'ex: Pleasanton Library', max_length=75)),
                ('location_address_1', models.CharField(blank=True, help_text=b'ex: 400 Old Bernal Ave', max_length=75)),
                ('location_address_2', models.CharField(blank=True, help_text=b'ex: Building 2, Lobby, etc.', max_length=75)),
                ('city', models.CharField(blank=True, help_text=b'ex: Pleasanton', max_length=75)),
                ('state', models.CharField(blank=True, help_text=b'ex: CA', max_length=2)),
                ('zip_code', models.CharField(blank=True, help_text=b'ex: 94566', max_length=5)),
                ('country', models.CharField(blank=True, help_text=b'ex: United States', max_length=75)),
                ('event_details', ckeditor.fields.RichTextField(help_text=b'Detailed description of your event goes here.')),
                ('optional_event_details', ckeditor.fields.RichTextField(blank=True, help_text=b'Additional detailed description of your event goes here.', null=True)),
                ('event_FAQ', ckeditor.fields.RichTextField(blank=True, help_text=b'FAQs go here.', null=True)),
                ('event_contact_name', models.CharField(blank=True, help_text=b'Name of the contact for your event.', max_length=30)),
                ('event_contact_phone', models.CharField(blank=True, help_text=b'Phone number of the contact for your event.', max_length=30)),
                ('event_contact_email', models.CharField(blank=True, help_text=b'Email of the contact for your event.', max_length=255)),
                ('event_banner', models.FileField(blank=True, help_text=b'Dimensions: minimum 2160 x 1080px. File Type: JPEG, PNG, BMP, or GIF. File Size: no larger than 10 MB.', null=True, upload_to=b'images/')),
                ('event_access_code', models.CharField(blank=True, help_text=b'clarify: 10 or fewer character access code for your event.', max_length=10)),
                ('registration_code', models.CharField(blank=True, help_text=b'clarify: 10 or fewer character registration code for your event.', max_length=10)),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[(b'-----', b'-----'), (b'ACCESS_CODE', b'ACCESS_CODE'), (b'REGISTRATION_CODE', b'REGISTRATION_CODE'), (b'BOTH', b'BOTH')], max_length=25, null=True)),
                ('registration_code', models.CharField(blank=True, max_length=255, null=True)),
                ('access_code', models.CharField(blank=True, max_length=255, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hackathon.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProgramFlow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('welcome_slide_title', models.CharField(blank=True, max_length=255, null=True)),
                ('welcome_slide_file', models.CharField(blank=True, max_length=255, null=True)),
                ('welcome_talking_points', ckeditor.fields.RichTextField(blank=True, default=None, max_length=1000, null=True)),
                ('welcome_boolean', models.BooleanField(default=False)),
                ('guest_speaker_slide_title', models.CharField(blank=True, max_length=255, null=True)),
                ('guest_speaker_slide_file', models.CharField(blank=True, max_length=255, null=True)),
                ('guest_speaker_talking_points', ckeditor.fields.RichTextField(blank=True, default=None, max_length=1000, null=True)),
                ('guest_speaker_boolean', models.BooleanField(default=False)),
                ('workshop_slide_title', models.CharField(blank=True, max_length=255, null=True)),
                ('workshop_slide_file', models.CharField(blank=True, max_length=255, null=True)),
                ('workshop_talking_points', ckeditor.fields.RichTextField(blank=True, default=None, max_length=1000, null=True)),
                ('workshop_boolean', models.BooleanField(default=False)),
                ('number_of_teams', models.IntegerField(null=True)),
                ('team_project_slide_title', models.CharField(blank=True, max_length=255, null=True)),
                ('team_project_slide_file', models.CharField(blank=True, max_length=255, null=True)),
                ('team_project_talking_points', ckeditor.fields.RichTextField(blank=True, default=None, max_length=1000, null=True)),
                ('team_project_boolean', models.BooleanField(default=False)),
                ('team_slideshow_slide_title', models.CharField(blank=True, max_length=255, null=True)),
                ('team_slideshow_slide_file', models.CharField(blank=True, max_length=255, null=True)),
                ('team_slideshow_talking_points', ckeditor.fields.RichTextField(blank=True, default=None, max_length=1000, null=True)),
                ('team_slideshow_boolean', models.BooleanField(default=False)),
                ('judges_slide_title', models.CharField(blank=True, max_length=255, null=True)),
                ('judges_slide_file', models.CharField(blank=True, max_length=255, null=True)),
                ('judges_talking_points', ckeditor.fields.RichTextField(blank=True, default=None, max_length=1000, null=True)),
                ('judges_boolean', models.BooleanField(default=False)),
                ('creator', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='hackathon.Event')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(blank=True, max_length=255, null=True, verbose_name='organization name')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='position title')),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether this user should be treated as admin. Unselect this instead of deleting accounts.', verbose_name='admin')),
                ('school', models.CharField(blank=True, choices=[(b'school1', b'school1'), (b'school2', b'school2'), (b'school3', b'school3'), (b'school4', b'school4'), (b'school4', b'school5')], max_length=100, null=True)),
                ('age', models.CharField(blank=True, choices=[(b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10'), (b'11', b'11'), (b'12', b'12'), (b'13', b'13'), (b'14', b'14'), (b'15', b'15'), (b'16', b'16'), (b'17', b'17'), (b'18', b'18'), (b'19', b'19'), (b'20', b'20')], max_length=255, null=True, verbose_name='age')),
                ('grade', models.CharField(blank=True, choices=[(b'K', b'K'), (b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10'), (b'11', b'11'), (b'12', b'12')], max_length=255, null=True, verbose_name='grade')),
                ('school_not_listed', models.CharField(blank=True, max_length=255, null=True, verbose_name='school_not_listed')),
                ('address_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='address_1')),
                ('address_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='address_2')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='city')),
                ('state', models.CharField(blank=True, max_length=2, null=True, verbose_name='state')),
                ('zip', models.CharField(blank=True, max_length=255, null=True, verbose_name='zip')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='phone')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='event_register',
            field=models.ManyToManyField(blank=True, related_name='event_register', through='hackathon.EventRegister', to=settings.AUTH_USER_MODEL),
        ),
    ]
